--[[

███╗░░░███╗███████╗░██████╗░██████╗██╗
████╗░████║██╔════╝██╔════╝██╔════╝██║
██╔████╔██║█████╗░░╚█████╗░╚█████╗░██║
██║╚██╔╝██║██╔══╝░░░╚═══██╗░╚═══██╗██║
██║░╚═╝░██║███████╗██████╔╝██████╔╝██║
╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═════╝░╚═╝

██╗░░░░░████████╗██████╗░
██║░░░░░╚══██╔══╝╚════██╗
██║░░░░░░░░██║░░░░░███╔═╝
██║░░░░░░░░██║░░░██╔══╝░░
███████╗░░░██║░░░███████╗
╚══════╝░░░╚═╝░░░╚══════╝
]]--

--> ScreenGui <--
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui

-->  TextLabel <--
local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = ScreenGui 
TextLabel.Text = "-Made By Messilt2" 
TextLabel.Size = UDim2.new(0, 800, 0, 200)
TextLabel.AnchorPoint = Vector2.new(0.5, 0.5) 
TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0) 
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextStrokeTransparency = 0 
TextLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0) 
TextLabel.BackgroundTransparency = 1 
TextLabel.TextSize = 40 
TextLabel.TextTransparency = 1 

--> Tween properties for fade in and fade out <--
local TweenService = game:GetService("TweenService")

--> Fade in <--
local fadeInTween = TweenService:Create(TextLabel, TweenInfo.new(2), {TextTransparency = 0})
fadeInTween:Play()
task.wait(2)

--> Wait 5s <--
task.wait(3)

--> Fade out <--
local fadeOutTween = TweenService:Create(TextLabel, TweenInfo.new(2), {TextTransparency = 1})
fadeOutTween:Play()
task.wait(2)

--> Destroy the TextLabel <--
TextLabel:Destroy()

--> ESP code <--

--> Service  <--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera

local distanceThreshold = 12
local nearestPlayers = {}


--> create name and distance label above player’s head <--

local function createNameDistanceTag(character)
local head = character:FindFirstChild("Head") or character:WaitForChild("Head")
local billboardGui = Instance.new("BillboardGui")
billboardGui.Adornee = head
billboardGui.Size = UDim2.new(0, 200, 0, 50)
billboardGui.StudsOffset = Vector3.new(0, 2, 0)
billboardGui.AlwaysOnTop = true
billboardGui.Parent = character

local textLabel = Instance.new("TextLabel")
textLabel.Parent = billboardGui
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.BackgroundTransparency = 1
textLabel.TextColor3 = Color3.new(1, 1, 1) -- White text
textLabel.TextScaled = true
textLabel.Font = Enum.Font.SourceSans

RunService.RenderStepped:Connect(function()
if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
    local distance = (localPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
    textLabel.Text = string.format("%s\n%.2f studs", character.Name, distance)
end
end)
end


--> esp function <--

local function highlightCharacter(character)
local highlight = character:FindFirstChildOfClass("Highlight") or Instance.new("Highlight")
highlight.Parent = character
highlight.FillColor = Color3.new(1, 0, 0) -- Bright red
highlight.FillTransparency = 0.5
highlight.OutlineColor = Color3.new(1, 0, 0)
highlight.OutlineTransparency = 0
highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
end


--> Function to update the nearest players <--

local function updateNearestPlayersList()
nearestPlayers = {}

for _, otherPlayer in pairs(Players:GetPlayers()) do
if otherPlayer ~= localPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
local distance = (localPlayer.Character.HumanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
if distance < distanceThreshold then
table.insert(nearestPlayers, otherPlayer)
end
end
end

table.sort(nearestPlayers, function(a, b)
local distanceA = (localPlayer.Character.HumanoidRootPart.Position - a.Character.HumanoidRootPart.Position).Magnitude
local distanceB = (localPlayer.Character.HumanoidRootPart.Position - b.Character.HumanoidRootPart.Position).Magnitude
return distanceA < distanceB
end)
end


--> Function to set up highlighting and label for players <--

local function setupPlayer(player)
local function onCharacterAdded(character)
character:WaitForChild("HumanoidRootPart")
character:WaitForChild("Head")

highlightCharacter(character)
createNameDistanceTag(character)
updateNearestPlayersList()
end

if player.Character then
onCharacterAdded(player.Character)
end

player.CharacterAdded:Connect(onCharacterAdded)
end


--> Set up esp and tags for all players <--

for _, player in pairs(Players:GetPlayers()) do
setupPlayer(player)
end


--> Set up esp and labels for new players <--

Players.PlayerAdded:Connect(function(player)
setupPlayer(player)
end)


--> Handle player respawns <--
local function onCharacterAdded(character)
character:WaitForChild("HumanoidRootPart")
character:WaitForChild("Head")
highlightCharacter(character)
createNameDistanceTag(character)
end

--> Watch for changes to characters <--
localPlayer.CharacterAdded:Connect(onCharacterAdded)


--> Update the list of nearest players each frame <--

RunService.RenderStepped:Connect(updateNearestPlayersList)
